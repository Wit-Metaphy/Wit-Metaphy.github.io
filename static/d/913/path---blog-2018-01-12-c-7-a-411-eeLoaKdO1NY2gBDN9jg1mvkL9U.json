{"data":{"markdownRemark":{"html":"<h2>ES5</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript     \"><pre class=\"language-javascript     \"><code class=\"language-javascript     \">Array.apply(null, {length: N}).map(Function.call, Number);</code></pre></div>\n<h3>说明</h3>\n<ol>\n<li>Array.apply(null, {length: N}) 返回一个由undefined填充的长度为N的数组(例如 A = [undefined, undefined, ...])。 </li>\n<li>A.map(Function.call, Number) 返回一个长度为N的数组，它的索引为I的元素为Function.call.call(Number, undefined, I, A)的结果。</li>\n<li>Function.call.call(Number, undefined, I, A)可转化为Number(I)，正好就是I。</li>\n<li>结果为：[0, 1, ..., N-1]。</li>\n</ol>\n<h2>ES6</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Array<span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token constant\">N</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>说明</h3>\n<ol>\n<li>A = new Array(N) 返回一个由 undefined 填充的长度为 N 的数组（例如 A = [undefined, undefined, ...]）。</li>\n<li>F = (val, index) => index 即 function F (val, index) { return index; }。</li>\n<li>Array.from(A, F) 返回一个长度为 N 的数组，它的索引为 I 的元素为F(A[I], I)的结果，也就是I。</li>\n<li>结果为：[0, 1, ..., N-1]。</li>\n</ol>","frontmatter":{"date":"January 12, 2018","path":"/blog/2018-01-12","title":"JavaScript 一条语句生成一个数组"}}},"pageContext":{}}