{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["PostLink","_ref","post","react_default","a","createElement","className","gatsby_browser_entry","to","frontmatter","path","date","Math","ceil","wordCount","words","title","excerpt","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","map","post_link","key","id","layout","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","Layout","render","children","this","props","react__WEBPACK_IMPORTED_MODULE_1___default","href","Date","getFullYear","Component"],"mappings":"uIAiBeA,EAdE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIN,EAAKO,YAAYC,KAAMJ,UAAU,aACzCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbJ,EAAKO,YAAYE,KADnB,MAC4BC,KAAKC,KAAKX,EAAKY,UAAUC,MAAQ,IAD7D,aAGAZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAKH,EAAKO,YAAYO,OACtBb,EAAAC,EAAAC,cAAA,SAAIH,EAAKe,aCXjBC,EAAAC,EAAAC,EAAA,8BAAAC,IAgBeC,UAZG,SAAArB,GAIZ,IACEsB,EADFtB,EAHJuB,KACEC,kBAAqBC,MAIpBC,OAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKpB,YAAYE,OACvCmB,IAAI,SAAAF,GAAI,OAAIzB,EAAAC,EAAAC,cAAC0B,EAAD,CAAUC,IAAKJ,EAAKC,KAAKI,GAAI/B,KAAM0B,EAAKC,SAEvD,OAAO1B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KAAQ/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBiB,KAThD,IAcaF,EAAS,kCClBtB,IAAsBc,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAtB,EAAA,GAAAuB,EAAAvB,EAAAwB,EAAAF,GAAAG,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAAwB,EAAAC,GAAAE,EAAA3B,EAAA,IAAA4B,EAAA5B,EAAAwB,EAAAG,GAAA3B,EAAAC,EAAAC,EAAA,sBAAA0B,EAAA1C,IAAAc,EAAA,KAY2B6B,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,uGCnDhBC,EAAmB,SAAArD,GAAkB,IAAfsD,EAAetD,EAAfsD,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOZ,IAAM1C,cAAcuD,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBU,UAAY,CAC3BT,SAAUN,IAAUgB,MAAM,CACxBN,SAAUV,IAAUE,OAAOC,aAC1BA,YAGUE,kFClBTY,oGACJC,OAAA,WAAS,IACCC,EAAaC,KAAKC,MAAlBF,SACR,OACEG,EAAAnE,EAAAC,cAAA,WACEkE,EAAAnE,EAAAC,cAAA,UAAQC,UAAU,UAChBiE,EAAAnE,EAAAC,cAAA,KAAGC,UAAU,YACXiE,EAAAnE,EAAAC,cAAA,OAAKC,UAAU,eAEjBiE,EAAAnE,EAAAC,cAAA,KAAGC,UAAU,uBAAuBU,MAAM,SAASwD,KAAK,KACtDD,EAAAnE,EAAAC,cAAA,UAAQC,UAAU,cAChBiE,EAAAnE,EAAAC,cAAA,cAAYC,UAAU,aAAtB,OAGJiE,EAAAnE,EAAAC,cAAA,OAAKC,UAAU,OAAf,UAEEiE,EAAAnE,EAAAC,cAAA,KAAGmE,KAAK,8BAAR,cAGJD,EAAAnE,EAAAC,cAAA,YAAO+D,GACPG,EAAAnE,EAAAC,cAAA,UAAQC,UAAU,UAAlB,MACK,IAAImE,MAAOC,cADhB,qBAGEH,EAAAnE,EAAAC,cAAA,KAAGmE,KAAK,4BAAR,gBAvBWzB,IAAM4B,YA8BZT","file":"component---src-pages-index-js-007e8bf3ced9c619cc96.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post }) => (\n  <div className=\"blog\">\n    <Link to={post.frontmatter.path} className=\"blog-link\">\n      <div className=\"blog-header\">\n       {post.frontmatter.date} - {Math.ceil(post.wordCount.words / 30)} min read\n      </div>\n      <div className=\"blog-body\">\n        <h2>{post.frontmatter.title}</h2>\n        <p>{post.excerpt}</p>\n      </div>\n    </Link>\n  </div>\n)\n\nexport default PostLink","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport PostLink from \"../components/post-link\"\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return <Layout><div className=\"blog-wrapper\">{Posts}</div></Layout>\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 140)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n          wordCount {\n            words\n          }\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props\n    return (\n      <div>\n        <header className=\"header\">\n          <a className=\"no-after\">\n            <div className=\"color-bar\"></div>\n          </a>\n          <a className=\"header-link no-after\" title=\"Ji Zhu\" href=\"/\">\n            <figure className=\"header-box\">\n              <figcaption className=\"header-js\">J</figcaption>\n            </figure>\n          </a>\n          <nav className=\"nav\">\n            github&nbsp;\n            <a href=\"https://github.com/zhuji96\">@zhuji96</a>\n          </nav>\n        </header>\n        <main>{children}</main>\n        <footer className=\"footer\">\n          © {new Date().getFullYear()} ❤️ Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}